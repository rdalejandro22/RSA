#include <iostream>
#include <string>
#include <Cesar.h>
#include <Afin.h>
#include <Rail Fence.h>
#include <time.h>
#include <bitset>
using namespace std;

int ga(int bits_seed, int bits_num, int particiones, int vueltas)
{
    srand(time(NULL));
    const size_t mango = sizeof(unsigned int) * bits_num;
    bitset <mango> a;
    for(int i = 0; i < bits_seed; i++){
        a[i + bits_num - bits_seed] = rand()%2;
    }
    int hola = a.size()-1;
    for(int i = bits_num - bits_seed - 1; i >= 0; i--)
    {
        a[i] = a[hola] ^ a[hola - 1];
        hola--;
    }
    cout << a << endl;
}

int main()
{
    ga(5,8,2,4);

    //Cesar

    /*Cesar cesar(4);
    string texto2 = "neo mango wango";
    cout << cesar.cifrar(texto2);*/

    //Afin

    /*string texto = "MFfYdBLYdBqudUwfom,qudwfuqLFuqdUfbLfodfumYWiBduqmFfQfbqUuqWoqFdUfkLoduqmFdbdUwfiFfdo,mkqBYmfLUfiFfumF iFBmfWkLUukqBmfbLfqFUBkiuuqmFLUfmfkL,odUfNqLFfbLsqFqbdUwfmkbLFdbdUfQfsqFqBdUfDiLfWLkYqBLfooLSdkfdfudNmfiFdfduBqSqbdbfYLbqdFBLfWdUmUfUiuLUqSmUfDiLfFmf,LFLkLFfbibdUfdfDiqLFfbLNdfJduLkfbquJdfduBqSqbdbPfcdbmUfiFfLUBdbmfqFquqdofQfiFdfLFBkdbdwfUq,iqLFbmfomUfWdUmUfUiuLUqSmUfULfooL,dfdfiFfLUBdbmfsqFdofQfULfmNBqLFLfiFdfUmoiuqmF";
    string texto_cifrado, texto_descifrado;
    long long clave_privada, b;
    Afin encriptador;
    //texto_cifrado = encriptador.cifrar(texto);
    //cout << texto_cifrado <<endl;
    cout << "Ingrese su clave publica para descifrar: ";
    cin >> clave_privada;
    cout << "Ingrese b: ";
    cin >> b;
    texto_descifrado = encriptador.descifrar(clave_privada, b, texto);
    cout << texto_descifrado;*/

    //Rail Fence

    /*string texto1 = "holacomoestas";
    int clave;
    cout << "Ingrese la clave mayor a 1: " << endl;
    cin >> clave;
    cout << cifrar_railfence(clave, texto1);
    string texto2 = "hmsoooalcetas";
    cout << descifrar_railfence(4,texto2);*/
    //cout << inversa(23,256);

}
